name: Update Area Feeds (AI/Robotics/Quantum/Biotech/Nanotech)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/30 * * * *"  # every 30 minutes
  push:
    branches: [ main ]
    paths:
      - 'feeds.yaml'
      - 'scripts/**'
      - '.github/workflows/update-area-feeds.yml'
    paths-ignore:
      - 'README.md'
      - 'LICENSE*'
      - 'assets/**'
      - 'docs/**'

# Prevent overlapping runs on the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Needed to push updated feeds back to the repo
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout (full history for safe pushes)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true  # use GITHUB_TOKEN for push

      - name: Set up Git (identity & safe directory)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: scripts/requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Build area feeds
        run: |
          python scripts/update_feeds.py

      - name: Ensure feeds directory exists (no-op if present)
        run: |
          mkdir -p feeds

      - name: Gzip latest feeds (keep originals)
        shell: bash
        run: |
          shopt -s nullglob
          for f in feeds/*.xml feeds/*.atom.xml feeds/*.json; do
            [ -e "$f" ] && gzip -kf "$f"
          done

      - name: Commit generated files (only if changes)
        run: |
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "chore: update feeds & index [skip ci]"
            # Retry push to avoid rare race with concurrent runs
            for i in 1 2 3; do
              git pull --rebase --autostash origin "${GITHUB_REF_NAME:-main}" || true
              if git push origin "HEAD:${GITHUB_REF_NAME:-main}"; then
                exit 0
              fi
              echo "Push failed, retry $i/3â€¦"
              sleep 3
            done
            echo "Push failed after retries"; exit 1
          else
            echo "No changes to commit."
          fi

      - name: Lightweight repo GC (best-effort)
        run: |
          git gc --prune=now || true
